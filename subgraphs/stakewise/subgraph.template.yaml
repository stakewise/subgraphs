specVersion: 0.0.7
description: The liquid staking protocol
repository: https://github.com/stakewise/subgraphs/subgraphs/stakewise
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Pool
    network: {{ network }}
    source:
      address: '{{ pool.address }}'
      abi: Pool
      startBlock: {{ pool.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - Pool
        - RewardEthToken
        - Partner
        - Referral
        - DepositActivation
        - Operator
        - OperatorSnapshot
        - Validator
        - Network
      abis:
        - name: Pool
          file: ./packages/abis/Pool.json
      eventHandlers:
        - event: MinActivatingDepositUpdated(uint256,address)
          handler: handleMinActivatingDepositUpdated
        - event: PendingValidatorsLimitUpdated(uint256,address)
          handler: handlePendingValidatorsLimitUpdated
        - event: ActivatedValidatorsUpdated(uint256,address)
          handler: handleActivatedValidatorsUpdated
        - event: StakedWithPartner(indexed address,uint256)
          handler: handleStakeWithPartner
        - event: StakedWithReferrer(indexed address,uint256)
          handler: handleStakeWithReferrer
        - event: ActivationScheduled(indexed address,uint256,uint256)
          handler: handleActivationScheduled
        - event: Activated(indexed address,uint256,uint256,indexed address)
          handler: handleActivated
        - event: ValidatorRegistered(bytes,address)
          handler: handleValidatorRegistered
        - event: Refunded(indexed address,uint256)
          handler: handleRefunded
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: PoolValidators
    network: {{ network }}
    source:
      address: '{{ poolValidators.address }}'
      abi: PoolValidators
      startBlock: {{ poolValidators.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/poolValidators.ts
      entities:
        - Operator
        - OperatorSnapshot
        - RewardEthToken
        - Validator
        - Network
      abis:
        - name: PoolValidators
          file: ./packages/abis/PoolValidators.json
      eventHandlers:
        - event: OperatorAdded(indexed address,indexed bytes32,string)
          handler: handleOperatorAdded
        - event: OperatorRemoved(indexed address,indexed address)
          handler: handleOperatorRemoved
        - event: OperatorCommitted(indexed address)
          handler: handleOperatorCommitted
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  # Process legacy events
  - kind: ethereum/contract
    name: MerkleDistributorV1
    network: {{ network }}
    source:
      address: '{{ merkleDistributor.address }}'
      abi: MerkleDistributorV1
      startBlock: {{ merkleDistributor.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/merkleDistributor.ts
      entities:
        - PeriodicDistribution
      abis:
        - name: MerkleDistributorV1
          file: ./packages/abis/MerkleDistributorV1.json
      eventHandlers:
        - event: DistributionAdded(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handlePeriodicDistributionAddedV1

  - kind: ethereum/contract
    name: MerkleDistributorV2
    network: {{ network }}
    source:
      address: '{{ merkleDistributor.address }}'
      abi: MerkleDistributorV2
      startBlock: {{ merkleDistributor.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/merkleDistributor.ts
      entities:
        - MerkleDistributor
        - MerkleDistributorClaim
        - PeriodicDistribution
        - OneTimeDistribution
        - RewardEthToken
        - Network
        - MerkleRootSnapshot
      abis:
        - name: MerkleDistributorV2
          file: ./packages/abis/MerkleDistributorV2.json
      eventHandlers:
        - event: MerkleRootUpdated(indexed address,indexed bytes32,string)
          handler: handleMerkleRootUpdated
        - event: PeriodicDistributionAdded(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handlePeriodicDistributionAddedV2
        - event: OneTimeDistributionAdded(indexed address,indexed address,indexed address,uint256,string)
          handler: handleOneTimeDistributionAdded
        - event: Claimed(indexed address,uint256,address[],uint256[])
          handler: handleClaimed
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: Oracles
    network: {{ network }}
    source:
      address: '{{ oracles.address }}'
      abi: Oracles
      startBlock: {{ oracles.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/oracles.ts
      entities:
        - Oracle
        - Network
      abis:
        - name: Oracles
          file: ./packages/abis/Oracles.json
      eventHandlers:
        - event: Initialized(uint256)
          handler: handleInitialized
        - event: OracleAdded(indexed address)
          handler: handleOracleAdded
        - event: OracleRemoved(indexed address)
          handler: handleOracleRemoved
        - event: RewardsVoteSubmitted(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleRewardsVoteSubmitted
        - event: MerkleRootVoteSubmitted(indexed address,indexed address,uint256,indexed bytes32,string)
          handler: handleMerkleRootVoteSubmitted
        - event: RegisterValidatorVoteSubmitted(indexed address,indexed address,indexed address,bytes,uint256)
          handler: handleRegisterValidatorVoteSubmitted
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: OraclesV2
    network: {{ network }}
    source:
      address: '{{ oracles.address }}'
      abi: OraclesV2
      startBlock: {{ oracles.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/oracles.ts
      entities:
        - Oracle
        - Network
      abis:
        - name: OraclesV2
          file: ./packages/abis/OraclesV2.json
      eventHandlers:
        - event: RegisterValidatorsVoteSubmitted(indexed address,address[],uint256)
          handler: handleRegisterValidatorsVoteSubmitted

  - kind: ethereum/contract
    name: VestingEscrowFactory
    network: {{ network }}
    source:
      address: '{{ vestingEscrowFactory.address }}'
      abi: VestingEscrowFactory
      startBlock: {{ vestingEscrowFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/vestingEscrowFactory.ts
      entities:
        - VestingEscrow
        - Network
      abis:
        - name: VestingEscrowFactory
          file: ./packages/abis/VestingEscrowFactory.json
      eventHandlers:
        - event: VestingEscrowCreated(indexed address,indexed address,indexed address,address,address,uint256,uint256,uint256,uint256)
          handler: handleVestingEscrowCreated
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: StakeWiseToken
    network: {{ network }}
    source:
      address: '{{ stakeWiseToken.address }}'
      abi: StakeWiseToken
      startBlock: {{ stakeWiseToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/stakeWiseToken.ts
      entities:
        - StakeWiseTokenHolder
        - RewardEthToken
        - Network
        - VestingEscrow
      abis:
        - name: StakeWiseToken
          file: ./packages/abis/StakeWiseToken.json
        - name: ContractChecker
          file: ./packages/abis/ContractChecker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: StakedEthToken
    network: {{ network }}
    source:
      address: '{{ stakedEthToken.address }}'
      abi: StakedEthToken
      startBlock: {{ stakedEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/stakedEthToken.ts
      entities:
        - Pool
        - Staker
        - RewardEthToken
        - Network
      abis:
        - name: StakedEthToken
          file: ./packages/abis/StakedEthToken.json
        - name: ContractChecker
          file: ./packages/abis/ContractChecker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

 # Process legacy events
  - kind: ethereum/contract
    name: RewardEthTokenV0
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV0
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - RewardEthToken
        - Pool
        - StakingRewardsSnapshot
      abis:
        - name: RewardEthTokenV0
          file: ./packages/abis/RewardEthTokenV0.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV0

  # Process legacy events
  - kind: ethereum/contract
    name: RewardEthTokenV1
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV1
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - RewardEthToken
        - Pool
        - StakingRewardsSnapshot
      abis:
        - name: RewardEthTokenV1
          file: ./packages/abis/RewardEthTokenV1.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256)
          handler: handleRewardsUpdatedV1

  - kind: ethereum/contract
    name: RewardEthTokenV2
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV2
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - Staker
        - RewardEthToken
        - Network
        - Pool
        - StakingRewardsSnapshot
      abis:
        - name: RewardEthTokenV2
          file: ./packages/abis/RewardEthTokenV2.json
        - name: ContractChecker
          file: ./packages/abis/ContractChecker.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV2
        - event: RewardsToggled(indexed address,bool)
          handler: handleRewardsToggled
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: FeesEscrow
    network: {{ network }}
    source:
      address: '{{ feesEscrow.address }}'
      abi: FeesEscrow
      startBlock: {{ feesEscrow.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/feesEscrow.ts
      entities:
        - Pool
        - RewardEthToken
      abis:
        - name: FeesEscrow
          file: ./packages/abis/FeesEscrow.json
      eventHandlers:
        - event: FeesTransferred(uint256)
          handler: handleFeesTransferred

  - kind: ethereum/contract
    name: Roles
    network: {{ network }}
    source:
      address: '{{ roles.address }}'
      abi: Roles
      startBlock: {{ roles.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/roles.ts
      entities:
        - Partner
        - Operator
        - Network
        - RewardEthToken
      abis:
        - name: Roles
          file: ./packages/abis/Roles.json
      eventHandlers:
        - event: OperatorUpdated(indexed address,uint256)
          handler: handleOperatorUpdated
        - event: OperatorRemoved(indexed address)
          handler: handleOperatorRemoved
        - event: PartnerUpdated(indexed address,uint256)
          handler: handlePartnerUpdated
        - event: PartnerRemoved(indexed address)
          handler: handlePartnerRemoved
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

{{#opiumDepositScheduler}}
  - kind: ethereum/contract
    name: OpiumDepositScheduler
    network: {{ network }}
    source:
      address: '{{ opiumDepositScheduler.address }}'
      abi: OpiumDepositScheduler
      startBlock: {{ opiumDepositScheduler.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/distributorTokens.ts
      entities:
        - DistributorToken
        - DistributorTokenHolders
        - RewardEthToken
      abis:
        - name: OpiumDepositScheduler
          file: ./packages/abis/OpiumDepositScheduler.json
      eventHandlers:
        - event: LogScheduled(indexed address,indexed address,uint256)
          handler: handleOpiumDepositScheduled
        - event: LogUnscheduled(indexed address,indexed address,uint256)
          handler: handleOpiumDepositUnscheduled
{{/opiumDepositScheduler}}

{{#distributorTokens}}
  - kind: ethereum/contract
    name: DistributorToken{{index}}
    network: {{ network }}
    source:
      address: '{{ address }}'
      abi: ERC20Token
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/distributorTokens.ts
      entities:
        - DistributorToken
        - DistributorTokenHolders
        - RewardEthToken
      abis:
        - name: ERC20Token
          file: ./packages/abis/ERC20Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
{{/distributorTokens}}
templates:
  - kind: ethereum/contract
    name: VestingEscrow
    network: {{ network }}
    source:
      abi: VestingEscrow
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/vestingEscrow.ts
      entities:
        - VestingEscrow
      abis:
        - name: VestingEscrow
          file: ./packages/abis/VestingEscrow.json
      eventHandlers:
        - event: Stopped(indexed address,indexed address,uint256)
          handler: handleStopped
        - event: Claimed(indexed address,indexed address,uint256)
          handler: handleClaimed
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
