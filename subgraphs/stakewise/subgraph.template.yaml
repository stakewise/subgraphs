specVersion: 0.0.3
description: The StakeWise ETH2 liquid staking protocol
repository: https://github.com/stakewise/subgraphs/subgraphs/stakewise
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Pool
    network: {{ network }}
    source:
      address: '{{ pool.address }}'
      abi: Pool
      startBlock: {{ pool.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - Pool
        - Network
        - DepositActivation
        - Operator
        - Validator
      abis:
        - name: Pool
          file: ./packages/abis/Pool.json
      eventHandlers:
        - event: MinActivatingDepositUpdated(uint256,address)
          handler: handleMinActivatingDepositUpdated
        - event: PendingValidatorsLimitUpdated(uint256,address)
          handler: handlePendingValidatorsLimitUpdated
        - event: ActivatedValidatorsUpdated(uint256,address)
          handler: handleActivatedValidatorsUpdated
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: ActivationScheduled(indexed address,uint256,uint256)
          handler: handleActivationScheduled
        - event: Activated(indexed address,uint256,uint256,indexed address)
          handler: handleActivated
        - event: ValidatorInitialized(bytes,address)
          handler: handleValidatorInitialized
        - event: ValidatorRegistered(bytes,address)
          handler: handleValidatorRegistered

  - kind: ethereum/contract
    name: PoolValidators
    network: {{ network }}
    source:
      address: '{{ poolValidators.address }}'
      abi: PoolValidators
      startBlock: {{ poolValidators.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/poolValidators.ts
      entities:
        - Pool
        - Operator
        - Validator
        - Network
      abis:
        - name: PoolValidators
          file: ./packages/abis/PoolValidators.json
      eventHandlers:
        - event: OperatorAdded(indexed address,indexed bytes32,string,indexed bytes32,string)
          handler: handleOperatorAdded
        - event: OperatorRemoved(indexed address,indexed address)
          handler: handleOperatorRemoved
        - event: OperatorSlashed(indexed address,bytes,uint256)
          handler: handleOperatorSlashed
        - event: CollateralDeposited(indexed address,uint256)
          handler: handleCollateralDeposited
        - event: CollateralWithdrawn(indexed address,indexed address,uint256)
          handler: handleCollateralWithdrawn
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: MerkleDistributor
    network: {{ network }}
    source:
      address: '{{ merkleDistributor.address }}'
      abi: MerkleDistributor
      startBlock: {{ merkleDistributor.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/merkleDistributor.ts
      entities:
        - MerkleDistributor
        - MerkleDistributorClaim
        - TokenDistribution
        - RewardEthToken
        - Network
      abis:
        - name: MerkleDistributor
          file: ./packages/abis/MerkleDistributor.json
      eventHandlers:
        - event: MerkleRootUpdated(indexed address,indexed bytes32,string)
          handler: handleMerkleRootUpdated
        - event: DistributionAdded(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleDistributionAdded
        - event: Claimed(indexed address,uint256,address[],uint256[])
          handler: handleClaimed
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: Oracles
    network: {{ network }}
    source:
      address: '{{ oracles.address }}'
      abi: Oracles
      startBlock: {{ oracles.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/oracles.ts
      entities:
        - Oracle
        - Network
      abis:
        - name: Oracles
          file: ./packages/abis/Oracles.json
      eventHandlers:
        - event: Initialized(uint256)
          handler: handleInitialized
        - event: OracleAdded(indexed address)
          handler: handleOracleAdded
        - event: OracleRemoved(indexed address)
          handler: handleOracleRemoved
        - event: RewardsVoteSubmitted(indexed address,indexed address,uint256,uint256,uint256)
          handler: handleRewardsVoteSubmitted
        - event: MerkleRootVoteSubmitted(indexed address,indexed address,uint256,indexed bytes32,string)
          handler: handleMerkleRootVoteSubmitted
        - event: InitializeValidatorVoteSubmitted(indexed address,indexed address,indexed address,bytes,uint256)
          handler: handleInitializeValidatorVoteSubmitted
        - event: FinalizeValidatorVoteSubmitted(indexed address,indexed address,indexed address,bytes,uint256)
          handler: handleFinalizeValidatorVoteSubmitted
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: VestingEscrowFactory
    network: {{ network }}
    source:
      address: '{{ vestingEscrowFactory.address }}'
      abi: VestingEscrowFactory
      startBlock: {{ vestingEscrowFactory.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/vestingEscrowFactory.ts
      entities:
        - VestingEscrow
        - Network
      abis:
        - name: VestingEscrowFactory
          file: ./packages/abis/VestingEscrowFactory.json
      eventHandlers:
        - event: VestingEscrowCreated(indexed address,indexed address,indexed address,address,address,uint256,uint256,uint256,uint256)
          handler: handleVestingEscrowCreated
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: OperatorsRevenueSharing
    network: {{ network }}
    source:
      address: '{{ operatorsRevenueSharing.address }}'
      abi: RevenueSharing
      startBlock: {{ operatorsRevenueSharing.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/operatorsRevenueSharing.ts
      entities:
        - OperatorsRevenueSharing
        - OperatorRevenueSharingAccount
        - Network
      abis:
        - name: RevenueSharing
          file: ./packages/abis/RevenueSharing.json
      eventHandlers:
        - event: RewardsUpdated(indexed address,uint256,uint256)
          handler: handleRewardsUpdated
        - event: AccountAdded(indexed address,indexed uint128)
          handler: handleAccountAdded
        - event: AccountRemoved(indexed address,uint256)
          handler: handleAccountRemoved
        - event: AmountIncreased(indexed address,uint256,uint256)
          handler: handleAmountIncreased
        - event: RevenueShareUpdated(indexed address,indexed uint256,uint256)
          handler: handleRevenueShareUpdated
        - event: RewardCollected(indexed address,indexed address,uint256)
          handler: handleRewardCollected
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: PartnersRevenueSharing
    network: {{ network }}
    source:
      address: '{{ partnersRevenueSharing.address }}'
      abi: RevenueSharing
      startBlock: {{ partnersRevenueSharing.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/partnersRevenueSharing.ts
      entities:
        - PartnersRevenueSharing
        - PartnerRevenueSharingAccount
        - Network
      abis:
        - name: RevenueSharing
          file: ./packages/abis/RevenueSharing.json
      eventHandlers:
        - event: RewardsUpdated(indexed address,uint256,uint256)
          handler: handleRewardsUpdated
        - event: AccountAdded(indexed address,indexed uint128)
          handler: handleAccountAdded
        - event: AccountRemoved(indexed address,uint256)
          handler: handleAccountRemoved
        - event: AmountIncreased(indexed address,uint256,uint256)
          handler: handleAmountIncreased
        - event: RevenueShareUpdated(indexed address,indexed uint256,uint256)
          handler: handleRevenueShareUpdated
        - event: RewardCollected(indexed address,indexed address,uint256)
          handler: handleRewardCollected
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: StakeWiseToken
    network: {{ network }}
    source:
      address: '{{ stakeWiseToken.address }}'
      abi: StakeWiseToken
      startBlock: {{ stakeWiseToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/stakeWiseToken.ts
      entities:
        - StakeWiseTokenHolder
        - RewardEthToken
        - Network
      abis:
        - name: StakeWiseToken
          file: ./packages/abis/StakeWiseToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

  - kind: ethereum/contract
    name: StakedEthToken
    network: {{ network }}
    source:
      address: '{{ stakedEthToken.address }}'
      abi: StakedEthToken
      startBlock: {{ stakedEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/stakedEthToken.ts
      entities:
        - Pool
        - Staker
        - RewardEthToken
        - Network
      abis:
        - name: StakedEthToken
          file: ./packages/abis/StakedEthToken.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused

 # Process legacy events
  - kind: ethereum/contract
    name: RewardEthTokenV0
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV0
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - RewardEthToken
      abis:
        - name: RewardEthTokenV0
          file: ./packages/abis/RewardEthTokenV0.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdatedV0

  # Process legacy events
  - kind: ethereum/contract
    name: RewardEthTokenV1
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV1
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - RewardEthToken
      abis:
        - name: RewardEthTokenV1
          file: ./packages/abis/RewardEthTokenV1.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256)
          handler: handleRewardsUpdatedV1

  - kind: ethereum/contract
    name: RewardEthTokenV2
    network: {{ network }}
    source:
      address: '{{ rewardEthToken.address }}'
      abi: RewardEthTokenV2
      startBlock: {{ rewardEthToken.startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/rewardEthToken.ts
      entities:
        - Staker
        - RewardEthToken
        - Network
      abis:
        - name: RewardEthTokenV2
          file: ./packages/abis/RewardEthTokenV2.json
      eventHandlers:
        - event: RewardsUpdated(uint256,uint256,uint256,uint256,uint256)
          handler: handleRewardsUpdated
        - event: RewardsToggled(indexed address,bool)
          handler: handleRewardsToggled
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
templates:
  - kind: ethereum/contract
    name: VestingEscrow
    network: {{ network }}
    source:
      abi: VestingEscrow
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/vestingEscrow.ts
      entities:
        - VestingEscrow
      abis:
        - name: VestingEscrow
          file: ./packages/abis/VestingEscrow.json
      eventHandlers:
        - event: Stopped(indexed address,indexed address,uint256)
          handler: handleStopped
        - event: Claimed(indexed address,indexed address,uint256)
          handler: handleClaimed
        - event: Paused(address)
          handler: handlePaused
        - event: Unpaused(address)
          handler: handleUnpaused
